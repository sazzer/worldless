name: CI

on:
  push:

jobs:
  build-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

  build-webapp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

  e2e:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
    needs:
      - build-service
      - build-webapp
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - name: Setup Terraform
        working-directory: service
        run: terraform init

      - name: Build Stack
        working-directory: service
        run: |
          terraform workspace new $GITHUB_SHA
          terraform plan
          terraform apply -auto-approve

      - name: Tidy up
        if: always()
        working-directory: service
        run: |
          terraform destroy -auto-approve
          terraform workspace select default
          terraform workspace delete $GITHUB_SHA

  deploy-service:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
    needs:
      - e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - name: Setup Terraform
        working-directory: service
        run: terraform init

      - name: Deploy
        working-directory: service
        run: |
          terraform workspace select default
          terraform plan
          terraform apply -auto-approve

  deploy-webapp:
    runs-on: ubuntu-latest
    needs:
      - e2e
    steps:
      - name: Checkout
        uses: actions/checkout@v2
